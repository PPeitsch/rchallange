"0","stock_data <- new.env()"
"0","# Define the tickers so we formulate what we need"
"0","tickers <- c(""BTC-USD"","
"0","             ""GC=F"","
"0","             ""CL=F"","
"0","             ""BZ=F"","
"0","             ""^IXIC"","
"0","             ""^GSPC"")"
"0",""
"0","getSymbols("
"0","  tickers,"
"0","  src = 'yahoo',"
"0","  env = stock_data,"
"0","  from = as.Date(""2010-01-01""),"
"0","  to = as.Date(""2023-07-30""),"
"0","  periodicity = 'daily'"
"0",")"
"1","[1]"
"1"," ""BTC-USD"""
"1"," ""GC=F""   "
"1"," ""CL=F""   "
"1"," ""BZ=F""   "
"1"," ""IXIC""   "
"1"," ""GSPC""   "
"1","
"
"0","# Read additional data"
"0","btc_data <- stock_data$`BTC-USD`"
"0","gold_data <- stock_data$`GC=F`"
"0","wti_data <- stock_data$`CL=F`"
"0","brent_data <- stock_data$`BZ=F`"
"0","nasdaq_data <- stock_data$IXIC"
"0","sp500_data <- stock_data$GSPC"
"0",""
"0","btc_data_df <- as.data.frame(btc_data)"
"0","gold_data_df <- as.data.frame(gold_data)"
"0","wti_data_df <- as.data.frame(wti_data)"
"0","brent_data_df <- as.data.frame(brent_data)"
"0","nasdaq_data_df <- as.data.frame(nasdaq_data)"
"0","sp500_data_df <- as.data.frame(sp500_data)"
"0",""
"0","btc_data_close <- btc_data_df %>%"
"0","  select('BTC-USD.Close') %>%"
"0","  drop_na()"
"0","gold_data_close <- gold_data_df %>%"
"0","  select('GC=F.Close') %>%"
"0","  drop_na()"
"0","wti_data_close <- wti_data_df %>%"
"0","  select('CL=F.Close') %>%"
"0","  drop_na()"
"0","brent_data_close <- brent_data_df %>%"
"0","  select('BZ=F.Close') %>%"
"0","  drop_na()"
"0","nasdaq_data_close <- nasdaq_data_df %>%"
"0","  select('IXIC.Close') %>%"
"0","  drop_na()"
"0","sp500_data_close <- sp500_data_df %>%"
"0","  select('GSPC.Close') %>%"
"0","  drop_na()"
"0",""
"0","# Extract dates from btc_data"
"0","btc_dates <- index(btc_data)"
"0",""
"0","# Convert dates to a common format"
"0","correlation_data$date <- as.Date(correlation_data$date)"
"0","btc_dates <- as.Date(btc_dates)"
"0",""
"0","# Get common dates for each data set"
"0","common_dates_btc <- as.Date(rownames(btc_data_close))"
"0","common_dates_gold <- as.Date(rownames(gold_data_close))"
"0","common_dates_wti <- as.Date(rownames(wti_data_close))"
"0","common_dates_brent <- as.Date(rownames(brent_data_close))"
"0","common_dates_nasdaq <- as.Date(rownames(nasdaq_data_close))"
"0","common_dates_sp500 <- as.Date(rownames(sp500_data_close))"
"0",""
"0","# Find common dates across all data sets"
"0","common_dates <- Reduce(intersect, list(common_dates_btc, common_dates_gold, common_dates_wti, common_dates_brent, common_dates_nasdaq, common_dates_sp500, correlation_matrix$date))"
"0",""
"0","# Filter data for common dates"
"0","common_dates <- as.Date(common_dates)"
"0",""
"0","# Filter and add columns for each data set"
"0","btc_data_close <- "
"0","  data.frame(date = common_dates,"
"0","             BTC = btc_data_close[rownames(btc_data_close) %in%"
"0","                                                    common_dates, ])"
"0","gold_data_close <-"
"0","  data.frame(date = common_dates,"
"0","             GOLD = gold_data_close[rownames(gold_data_close) %in%"
"0","                                                       common_dates, ])"
"0","wti_data_close <-"
"0","  data.frame(date = common_dates,"
"0","             WTI = wti_data_close[rownames(wti_data_close) %in%"
"0","                                                    common_dates, ])"
"0","brent_data_close <-"
"0","  data.frame(date = common_dates,"
"0","             BRENT = brent_data_close[rownames(brent_data_close) %in%"
"0","                                                          common_dates, ])"
"0","nasdaq_data_close <-"
"0","  data.frame(date = common_dates,"
"0","             NASDAQ = nasdaq_data_close[rownames(nasdaq_data_close) %in%"
"0","                                                             common_dates, ])"
"0","sp500_data_close <-"
"0","  data.frame(date = common_dates,"
"0","             SP500 = sp500_data_close[rownames(sp500_data_close) %in%"
"0","                                                          common_dates, ])"
"0",""
"0",""
"0","# Example for BTC"
"0","correlation_matrix <- correlation_matrix[correlation_matrix$date %in% common_dates, ]"
"0",""
"0","# Merge with the correlation matrix"
"0","correlation_matrix <- merge(correlation_matrix, btc_data_close, by = ""date"", all = TRUE)"
"0","correlation_matrix <- merge(correlation_matrix, gold_data_close, by = ""date"", all = TRUE)"
"0","correlation_matrix <- merge(correlation_matrix, wti_data_close, by = ""date"", all = TRUE)"
"0","correlation_matrix <- merge(correlation_matrix, brent_data_close, by = ""date"", all = TRUE)"
"0","correlation_matrix <- merge(correlation_matrix, nasdaq_data_close, by = ""date"", all = TRUE)"
"0","correlation_matrix <- merge(correlation_matrix, sp500_data_close, by = ""date"", all = TRUE)"
"0",""
"0","# Quitar la columna de fecha de correlation_matrix"
"0","correlation_matrix <- correlation_matrix[, -1]"
"0",""
"0","# Quitar la columna de fecha de correlation_matrix"
"0","correlation_matrix <- correlation_matrix[, -1]"
"0",""
"0","# Calcular la nueva matriz de correlaciÃ³n"
"0","correlation_m <- cor(correlation_matrix)"
"0",""
"0","# mat : is a matrix of data"
"0","# ... : further arguments to pass to the native R cor.test function"
"0","cor.mtest <- function(mat, ...) {"
"0","    mat <- as.matrix(mat)"
"0","    n <- ncol(mat)"
"0","    p.mat<- matrix(NA, n, n)"
"0","    diag(p.mat) <- 0"
"0","    for (i in 1:(n - 1)) {"
"0","        for (j in (i + 1):n) {"
"0","            tmp <- cor.test(mat[, i], mat[, j], ...)"
"0","            p.mat[i, j] <- p.mat[j, i] <- tmp$p.value"
"0","        }"
"0","    }"
"0","  colnames(p.mat) <- rownames(p.mat) <- colnames(mat)"
"0","  p.mat"
"0","}"
"0","# matrix of the p-value of the correlation"
"0","p.mat <- cor.mtest(correlation_m)"
"0",""
"0","# Specialized the insignificant value according to the significant level"
"0","corrplot(correlation_m,"
"0","         type=""upper"","
"0","         order=""hclust"","
"0","         # pvalues"
"0","         p.mat = p.mat,"
"0","         # coeficients"
"0","         addCoef.col = ""white"", number.digits = 2, number.cex = 0.75,"
"0","         sig.level = 0.01,"
"0","         # hide correlation coefficient on the principal diagonal"
"0","         diag=FALSE )"
